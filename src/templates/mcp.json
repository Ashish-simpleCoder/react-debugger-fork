{
  "mcpServers": {
    "react-debugger": {
      "command": "npx @react-debugger/core mcp",
      "env": { "NODE_ENV": "development" },
      "description": "React Debugger MCP server. Subscription-first with commit/findings/snapshot/control channels.",
      "capabilities": { "tools": { "listChanged": true } },
      "metadata": {
        "version": "0.2.0",
        "author": "React Debugger Team",
        "repository": "https://github.com/reillyjodonnell/react-debugger",
        "documentation": "https://github.com/reillyjodonnell/react-debugger/blob/main/README.md"
      },
      "tools": [
        {
          "name": "subscribe",
          "description": "Subscribe to channels with selector, projection and budgets",
          "inputSchema": {
            "type": "object",
            "properties": {
              "channels": {
                "type": "array",
                "items": { "type": "string" },
                "description": "Channels to subscribe to",
                "default": ["commit", "findings"]
              },
              "selector": {
                "type": "object",
                "description": "Filter to select matching fibers/components",
                "properties": {
                  "displayName": {
                    "type": "string",
                    "description": "Exact component display name"
                  },
                  "file": {
                    "type": "string",
                    "description": "File path (exact or regex string)"
                  },
                  "pathContains": { "type": "string" },
                  "keyEquals": { "type": "string" },
                  "costMsGte": { "type": "number" },
                  "propsMatch": {
                    "type": "object",
                    "additionalProperties": true
                  }
                }
              },
              "fields": {
                "type": "object",
                "description": "Projection for props/state/context in snapshots.",
                "properties": {
                  "props": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "Prop keys to include. Use [\"*\"] for all."
                  },
                  "state": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "Hooks state keys are index-based: state#0, state#1, ref#0, etc. Use [\"*\"] for all."
                  },
                  "context": {
                    "type": "array",
                    "items": { "type": "string" },
                    "description": "Context keys to include (by display name). Use [\"*\"] for all."
                  }
                }
              },
              "priority": {
                "type": "string",
                "enum": ["high", "normal", "low"],
                "default": "normal"
              },
              "budgets": {
                "type": "object",
                "properties": {
                  "bandwidthKBs": { "type": "number" },
                  "msgPerSec": { "type": "number" }
                }
              },
              "timeoutMs": {
                "type": "number",
                "description": "Max time to wait for first snapshot (50-1500ms). Default 250."
              }
            }
          },
          "outputSchema": {
            "type": "object",
            "properties": {
              "subscriptionId": { "type": "string" },
              "channels": { "type": "array", "items": { "type": "string" } },
              "selector": { "type": "object" },
              "targets": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "fid": { "type": "string" },
                    "displayName": { "type": "string" },
                    "path": { "type": "string" },
                    "key": { "type": "string" },
                    "source": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        {
          "name": "nextEvents",
          "title": "Drain subscription events",
          "description": "Return and remove queued events for a subscription",
          "inputSchema": {
            "type": "object",
            "properties": {
              "subscriptionId": { "type": "string" },
              "max": {
                "type": "number",
                "description": "Max events to drain (default 50)"
              }
            },
            "required": ["subscriptionId"]
          },
          "outputSchema": {
            "type": "object",
            "properties": {
              "events": { "type": "array", "items": { "type": "object" } }
            }
          }
        },
        {
          "name": "unsubscribe",
          "title": "Cancel a subscription",
          "description": "Stop a subscription by ID",
          "inputSchema": {
            "type": "object",
            "properties": { "subscriptionId": { "type": "string" } },
            "required": ["subscriptionId"]
          }
        },
        {
          "name": "getProps",
          "title": "Deref props",
          "description": "Fetch props at paths for a fiber and commit",
          "inputSchema": {
            "type": "object",
            "properties": {
              "fid": { "type": "string" },
              "commitId": {
                "type": "number",
                "description": "If omitted, the latest known commit is used."
              },
              "paths": { "type": "array", "items": { "type": "string" } }
            },
            "required": ["fid", "paths"]
          }
        },
        {
          "name": "getHooksState",
          "title": "Deref hooks state",
          "description": "Fetch hooks state for a fiber at specific paths. NOTE: React does not expose variable names; hooks are identified by index/type (e.g., state#0, state#1, ref#0).",
          "inputSchema": {
            "type": "object",
            "properties": {
              "fid": { "type": "string" },
              "commitId": {
                "type": "number",
                "description": "If omitted, the latest known commit is used."
              },
              "paths": {
                "type": "array",
                "items": { "type": "string" },
                "description": "One or more hook keys (e.g., [\"state#0\"], [\"ref#0\"]) or [\"*\"] to return all hooks."
              }
            },
            "required": ["fid", "paths"]
          }
        }
      ],
      "requirements": {
        "runtime": "bun",
        "minimumVersion": "1.0.0",
        "dependencies": ["react"]
      }
    }
  }
}
