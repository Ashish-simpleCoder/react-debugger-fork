name: Release (tag -> npm with token)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

permissions:
  contents: write # create GitHub Release

jobs:
  publish:
    name: Build & Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install deps
        run: bun install --frozen-lockfile

      # Ensure the git tag "vX.Y.Z" matches package.json version
      - name: Verify tag matches package.json version
        id: verify
        run: |
          TAG_VERSION="${GITHUB_REF_NAME#v}"
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Tag: $TAG_VERSION"
          echo "Pkg: $PKG_VERSION"
          if [ "$TAG_VERSION" != "$PKG_VERSION" ]; then
            echo "Tag and package.json version mismatch!"
            exit 1
          fi
          echo "version=$PKG_VERSION" >> "$GITHUB_OUTPUT"

      - name: Build
        run: bun run build

      # Configure npm auth via classic token (must be an Automation token)
      - name: Setup Node (registry + scope)
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org
          scope: '@react-debugger'
          always-auth: true

      - name: Authenticate to npm
        run: npm config set //registry.npmjs.org/:_authToken=${NPM_TOKEN}
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish to npm
        run: npm publish --access public

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.verify.outputs.version }}
          generate_release_notes: true
